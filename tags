!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/user1/projects/react-issue-tracker/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	/83342344/
*.ts	api/package.json	/^    "*.ts": [$/;"	a	object:lint-staged
0	api/package.json	/^      "yarn fix",$/;"	s	array:lint-staged.*.ts
0	api/package.json	/^    "src"$/;"	s	array:_moduleDirectories
0	api/tsconfig.json	/^      "lib": ["es2019"],$/;"	s	array:compilerOptions.lib
0	api/tsconfig.json	/^    "src\/**\/*.ts",$/;"	s	array:include
0	api/tsconfig.json	/^  "exclude": ["node_modules"],$/;"	s	array:exclude
1	api/package.json	/^      "git add"$/;"	s	array:lint-staged.*.ts
1	api/tsconfig.json	/^    "test\/**\/*.ts"$/;"	s	array:include
@types/cors	api/package.json	/^    "@types\/cors": "^2.8.12",$/;"	s	object:devDependencies
@types/express	api/package.json	/^    "@types\/express": "^4.17.14",$/;"	s	object:devDependencies
@types/faker	api/package.json	/^    "@types\/faker": "5.5.9",$/;"	s	object:devDependencies
@types/jsonwebtoken	api/package.json	/^    "@types\/jsonwebtoken": "^8.5.9",$/;"	s	object:devDependencies
@types/lodash	api/package.json	/^    "@types\/lodash": "^4.14.188",$/;"	s	object:devDependencies
@types/node	api/package.json	/^    "@types\/node": "^14.11.2",$/;"	s	object:devDependencies
@typescript-eslint/eslint-plugin	api/package.json	/^    "@typescript-eslint\/eslint-plugin": "^5.42.0",$/;"	s	object:devDependencies
@typescript-eslint/parser	api/package.json	/^    "@typescript-eslint\/parser": "^5.42.0",$/;"	s	object:devDependencies
AndSaveEntity	api/build/src/utils/typeorm.js	/^const validateAndSaveEntity = async (instance) => {$/;"	c
App	api/build/src/index.js	/^const initializeApp = async () => {$/;"	c
AuthTokenFromRequest	api/build/src/middleware/authentication.js	/^const getAuthTokenFromRequest = (req) => {$/;"	c
BACKLOG	api/build/src/constants/issues.d.ts	/^    BACKLOG = "backlog",$/;"	e	enum:IssueStatus
BACKLOG	api/src/constants/issues.ts	/^  BACKLOG = 'backlog',$/;"	e	enum:IssueStatus
BUG	api/build/src/constants/issues.d.ts	/^    BUG = "bug",$/;"	e	enum:IssueType
BUG	api/src/constants/issues.ts	/^  BUG = 'bug',$/;"	e	enum:IssueType
BUSINESS	api/build/src/constants/projects.d.ts	/^    BUSINESS = "business"$/;"	e	enum:ProjectCategory
BUSINESS	api/src/constants/projects.ts	/^  BUSINESS = 'business',$/;"	e	enum:ProjectCategory
BadUserInputError	api/build/src/errors/customErrors.js	/^class BadUserInputError extends CustomError {$/;"	c
BadUserInputError	api/src/errors/customErrors.ts	/^export class BadUserInputError extends CustomError {$/;"	c
Binding	api/build/src/database/connection.js	/^var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) /;"	c
Binding	api/build/src/errors/index.js	/^var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) /;"	c
Catch_1	api/build/src/errors/index.js	/^var asyncCatch_1 = require(".\/asyncCatch");$/;"	c
Comment	api/build/src/database/seeds/guestUser.js	/^const seedComment = (issue) => (0, typeorm_1.createEntity)(entities_1.Comment, {$/;"	c
Comment	api/build/src/entities/Comment.d.ts	/^declare class Comment extends BaseEntity {$/;"	c
Comment	api/build/src/entities/Comment.js	/^Comment = __decorate([$/;"	c
Comment	api/build/src/entities/Comment.js	/^let Comment = class Comment extends typeorm_1.BaseEntity {$/;"	c
Comment	api/src/entities/Comment.ts	/^class Comment extends BaseEntity {$/;"	c
Comment	api/src/utils/typeorm.ts	/^  Comment,$/;"	C
Comment_1	api/build/src/entities/index.js	/^var Comment_1 = require(".\/Comment");$/;"	c
Connection	api/src/database/seeds/development/index.ts	/^    const Connection = await createDatabaseConnection();$/;"	C
Constructor	api/src/utils/typeorm.ts	/^  const Constructor = entities[instance.constructor.name];$/;"	C
CustomError	api/build/src/errors/customErrors.d.ts	/^export declare class CustomError extends Error {$/;"	c
CustomError	api/build/src/errors/customErrors.js	/^class CustomError extends Error {$/;"	c
CustomError	api/src/errors/customErrors.ts	/^export class CustomError extends Error {$/;"	c
DB_DATABASE	api/src/types/env.d.ts	/^    DB_DATABASE: string;$/;"	p	interface:NodeJS.ProcessEnv
DB_HOST	api/src/types/env.d.ts	/^    DB_HOST: string;$/;"	p	interface:NodeJS.ProcessEnv
DB_PASSWORD	api/src/types/env.d.ts	/^    DB_PASSWORD: string;$/;"	p	interface:NodeJS.ProcessEnv
DB_PORT	api/src/types/env.d.ts	/^    DB_PORT: string;$/;"	p	interface:NodeJS.ProcessEnv
DB_USERNAME	api/src/types/env.d.ts	/^    DB_USERNAME: string;$/;"	p	interface:NodeJS.ProcessEnv
DONE	api/build/src/constants/issues.d.ts	/^    DONE = "done"$/;"	e	enum:IssueStatus
DONE	api/src/constants/issues.ts	/^  DONE = 'done',$/;"	e	enum:IssueStatus
DatabaseConnection	api/build/src/database/connection.js	/^const createDatabaseConnection = () => (0, typeorm_1.createConnection)({$/;"	c
DatabaseConnection	api/build/src/index.js	/^const establishDatabaseConnection = async () => {$/;"	c
Default	api/build/src/controllers/issues.js	/^var __importDefault = (this && this.__importDefault) || function (mod) {$/;"	c
Default	api/build/src/controllers/projects.js	/^var __importDefault = (this && this.__importDefault) || function (mod) {$/;"	c
Default	api/build/src/database/seeds/development/user.js	/^var __importDefault = (this && this.__importDefault) || function (mod) {$/;"	c
Default	api/build/src/entities/Comment.js	/^var __importDefault = (this && this.__importDefault) || function (mod) {$/;"	c
Default	api/build/src/entities/Issue.js	/^var __importDefault = (this && this.__importDefault) || function (mod) {$/;"	c
Default	api/build/src/entities/Project.js	/^var __importDefault = (this && this.__importDefault) || function (mod) {$/;"	c
Default	api/build/src/entities/User.js	/^var __importDefault = (this && this.__importDefault) || function (mod) {$/;"	c
Default	api/build/src/entities/index.js	/^var __importDefault = (this && this.__importDefault) || function (mod) {$/;"	c
Default	api/build/src/index.js	/^var __importDefault = (this && this.__importDefault) || function (mod) {$/;"	c
Default	api/build/src/utils/authToken.js	/^var __importDefault = (this && this.__importDefault) || function (mod) {$/;"	c
EmptyArray	api/build/src/utils/validation.js	/^    notEmptyArray: () => (value) => Array.isArray(value) &&$/;"	c
Entity	api/build/src/utils/typeorm.js	/^const createEntity = async (Constructor, input) => {$/;"	c
Entity	api/build/src/utils/typeorm.js	/^const deleteEntity = async (Constructor, id) => {$/;"	c
Entity	api/build/src/utils/typeorm.js	/^const updateEntity = async (Constructor, id, input) => {$/;"	c
EntityConstructor	api/build/src/utils/typeorm.d.ts	/^export declare type EntityConstructor = typeof Project | typeof User | typeof Issue | typeof Com/;"	a
EntityConstructor	api/src/utils/typeorm.ts	/^type EntityConstructor =$/;"	a
EntityInstance	api/build/src/utils/typeorm.d.ts	/^export declare type EntityInstance = Project | User | Issue | Comment;$/;"	a
EntityInstance	api/src/utils/typeorm.ts	/^type EntityInstance = Project | User | Issue | Comment;$/;"	a
EntityNotFoundError	api/build/src/errors/customErrors.js	/^class EntityNotFoundError extends CustomError {$/;"	c
EntityNotFoundError	api/src/errors/customErrors.ts	/^export class EntityNotFoundError extends CustomError {$/;"	c
EntityOrThrow	api/build/src/utils/typeorm.js	/^const findEntityOrThrow = async (Constructor, options) => {$/;"	c
ErrorData	api/build/src/errors/customErrors.d.ts	/^declare type ErrorData = {$/;"	a
ErrorData	api/src/errors/customErrors.ts	/^type ErrorData = {[key: string]: any};$/;"	a
ErrorMessage	api/build/src/utils/validation.d.ts	/^declare type ErrorMessage = false | string;$/;"	a
ErrorMessage	api/src/utils/validation.ts	/^type ErrorMessage = false | string;$/;"	a
Errors	api/build/src/errors/asyncCatch.js	/^const catchErrors = (requestHandler) => {$/;"	c
Errors	api/build/src/utils/validation.js	/^    const fieldErrors = {};$/;"	c
Errors	api/build/src/utils/validation.js	/^const generateErrors = (fieldValues, fieldValidators) => {$/;"	c
Express	api/build/src/index.js	/^const initializeExpress = () => {$/;"	c
Express	api/src/types/express.d.ts	/^declare namespace Express {$/;"	n
FieldErrors	api/build/src/utils/validation.d.ts	/^declare type FieldErrors = {$/;"	a
FieldErrors	api/src/utils/validation.ts	/^type FieldErrors = {[key: string]: string};$/;"	a
FieldValidators	api/build/src/utils/validation.d.ts	/^declare type FieldValidators = {$/;"	a
FieldValidators	api/src/utils/validation.ts	/^type FieldValidators = {[key: string]: Validator | Validator[]};$/;"	a
FieldValues	api/build/src/utils/validation.d.ts	/^declare type FieldValues = {$/;"	a
FieldValues	api/src/utils/validation.ts	/^type FieldValues = {[key: string]: Value};$/;"	a
Fields	api/build/src/utils/typeorm.js	/^        const errorFields = (0, validation_1.generateErrors)(instance, Constructor.validations);$/;"	c
GuestUserEntities	api/build/src/database/seeds/guestUser.js	/^const seedGuestUserEntities = async (user) => {$/;"	c
HIGH	api/build/src/constants/issues.d.ts	/^    HIGH = "4",$/;"	e	enum:IssuePriority
HIGH	api/src/constants/issues.ts	/^  HIGH = '4',$/;"	e	enum:IssuePriority
HIGHEST	api/build/src/constants/issues.d.ts	/^    HIGHEST = "5",$/;"	e	enum:IssuePriority
HIGHEST	api/src/constants/issues.ts	/^  HIGHEST = '5',$/;"	e	enum:IssuePriority
Handler	api/build/src/errors/errorHandler.js	/^const errorHandler = (error, _req, res, _next) => {$/;"	c
Handler_1	api/build/src/index.js	/^const errorHandler_1 = require("errors\/errorHandler");$/;"	c
INPROGRESS	api/build/src/constants/issues.d.ts	/^    INPROGRESS = "inprogress",$/;"	e	enum:IssueStatus
INPROGRESS	api/src/constants/issues.ts	/^  INPROGRESS = 'inprogress',$/;"	e	enum:IssueStatus
Id	api/build/src/middleware/authentication.js	/^    const userId = (0, authToken_1.verifyToken)(token).sub;$/;"	c
InvalidTokenError	api/build/src/errors/customErrors.js	/^class InvalidTokenError extends CustomError {$/;"	c
InvalidTokenError	api/src/errors/customErrors.ts	/^export class InvalidTokenError extends CustomError {$/;"	c
Issue	api/build/src/entities/Issue.d.ts	/^declare class Issue extends BaseEntity {$/;"	c
Issue	api/build/src/entities/Issue.js	/^Issue = __decorate([$/;"	c
Issue	api/build/src/entities/Issue.js	/^let Issue = class Issue extends typeorm_1.BaseEntity {$/;"	c
Issue	api/src/entities/Issue.ts	/^class Issue extends BaseEntity {$/;"	c
Issue	api/src/utils/typeorm.ts	/^  Issue,$/;"	C
IssuePriority	api/build/src/constants/issues.d.ts	/^export declare enum IssuePriority {$/;"	g
IssuePriority	api/build/src/constants/issues.js	/^})(IssuePriority = exports.IssuePriority || (exports.IssuePriority = {}));$/;"	c
IssuePriority	api/build/src/constants/issues.js	/^})(IssuePriority = exports.IssuePriority || (exports.IssuePriority = {}));$/;"	o
IssuePriority	api/src/constants/issues.ts	/^export enum IssuePriority {$/;"	g
IssueStatus	api/build/src/constants/issues.d.ts	/^export declare enum IssueStatus {$/;"	g
IssueStatus	api/build/src/constants/issues.js	/^})(IssueStatus = exports.IssueStatus || (exports.IssueStatus = {}));$/;"	c
IssueStatus	api/build/src/constants/issues.js	/^})(IssueStatus = exports.IssueStatus || (exports.IssueStatus = {}));$/;"	o
IssueStatus	api/src/constants/issues.ts	/^export enum IssueStatus {$/;"	g
IssueType	api/build/src/constants/issues.d.ts	/^export declare enum IssueType {$/;"	g
IssueType	api/build/src/constants/issues.js	/^})(IssueType = exports.IssueType || (exports.IssueType = {}));$/;"	c
IssueType	api/build/src/constants/issues.js	/^})(IssueType = exports.IssueType || (exports.IssueType = {}));$/;"	o
IssueType	api/src/constants/issues.ts	/^export enum IssueType {$/;"	g
Issue_1	api/build/src/entities/index.js	/^var Issue_1 = require(".\/Issue");$/;"	c
Issues	api/build/src/database/seeds/guestUser.js	/^const seedIssues = (project) => {$/;"	c
JWT_SECRET	api/src/types/env.d.ts	/^    JWT_SECRET: string;$/;"	p	interface:NodeJS.ProcessEnv
LOW	api/build/src/constants/issues.d.ts	/^    LOW = "2",$/;"	e	enum:IssuePriority
LOW	api/src/constants/issues.ts	/^  LOW = '2',$/;"	e	enum:IssuePriority
LOWEST	api/build/src/constants/issues.d.ts	/^    LOWEST = "1"$/;"	e	enum:IssuePriority
LOWEST	api/src/constants/issues.ts	/^  LOWEST = '1',$/;"	e	enum:IssuePriority
Length	api/build/src/utils/validation.js	/^    maxLength: (max) => (value) => !!value && value.length > max && `Must be at most ${max} char/;"	c
Length	api/build/src/utils/validation.js	/^    minLength: (min) => (value) => !!value && value.length < min && `Must be at least ${min} cha/;"	c
MARKETING	api/build/src/constants/projects.d.ts	/^    MARKETING = "marketing",$/;"	e	enum:ProjectCategory
MARKETING	api/src/constants/projects.ts	/^  MARKETING = 'marketing',$/;"	e	enum:ProjectCategory
MEDIUM	api/build/src/constants/issues.d.ts	/^    MEDIUM = "3",$/;"	e	enum:IssuePriority
MEDIUM	api/src/constants/issues.ts	/^  MEDIUM = '3',$/;"	e	enum:IssuePriority
Message	api/build/src/utils/validation.js	/^            const errorMessage = validator(fieldValues[fieldName], fieldValues);$/;"	c
ModuleDefault	api/build/src/database/connection.js	/^var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {$/;"	c
NilOrEmptyString	api/build/src/utils/validation.js	/^const isNilOrEmptyString = (value) => value === undefined || value === null || value === '';$/;"	c
NodeJS	api/src/types/env.d.ts	/^declare namespace NodeJS {$/;"	n
Of	api/build/src/utils/validation.js	/^    oneOf: (arr) => (value) => !!value && !arr.includes(value) && `Must be one of: ${arr.join(',/;"	c
PORT	api/build/src/index.js	/^    const PORT = 3000;$/;"	n
ProcessEnv	api/src/types/env.d.ts	/^  export interface ProcessEnv {$/;"	i	namespace:NodeJS
Project	api/build/src/database/seeds/guestUser.js	/^const seedProject = (user) => (0, typeorm_1.createEntity)(entities_1.Project, {$/;"	c
Project	api/build/src/entities/Project.d.ts	/^declare class Project extends BaseEntity {$/;"	c
Project	api/build/src/entities/Project.js	/^Project = __decorate([$/;"	c
Project	api/build/src/entities/Project.js	/^let Project = class Project extends typeorm_1.BaseEntity {$/;"	c
Project	api/src/entities/Project.ts	/^class Project extends BaseEntity {$/;"	c
ProjectCategory	api/build/src/constants/projects.d.ts	/^export declare enum ProjectCategory {$/;"	g
ProjectCategory	api/build/src/constants/projects.js	/^})(ProjectCategory = exports.ProjectCategory || (exports.ProjectCategory = {}));$/;"	c
ProjectCategory	api/build/src/constants/projects.js	/^})(ProjectCategory = exports.ProjectCategory || (exports.ProjectCategory = {}));$/;"	o
ProjectCategory	api/src/constants/projects.ts	/^export enum ProjectCategory {$/;"	g
Project_1	api/build/src/entities/index.js	/^var Project_1 = require(".\/Project");$/;"	c
Request	api/src/types/express.d.ts	/^  export interface Request {$/;"	i	namespace:Express
Response	api/src/types/express.d.ts	/^  export interface Response {$/;"	i	namespace:Express
RouteNotFoundError	api/build/src/errors/customErrors.js	/^class RouteNotFoundError extends CustomError {$/;"	c
RouteNotFoundError	api/src/errors/customErrors.ts	/^export class RouteNotFoundError extends CustomError {$/;"	c
SELECTED	api/build/src/constants/issues.d.ts	/^    SELECTED = "selected",$/;"	e	enum:IssueStatus
SELECTED	api/src/constants/issues.ts	/^  SELECTED = 'selected',$/;"	e	enum:IssueStatus
SOFTWARE	api/build/src/constants/projects.d.ts	/^    SOFTWARE = "software",$/;"	e	enum:ProjectCategory
SOFTWARE	api/src/constants/projects.ts	/^  SOFTWARE = 'software',$/;"	e	enum:ProjectCategory
STORY	api/build/src/constants/issues.d.ts	/^    STORY = "story"$/;"	e	enum:IssueType
STORY	api/src/constants/issues.ts	/^  STORY = 'story',$/;"	e	enum:IssueType
Star	api/build/src/database/connection.js	/^var __importStar = (this && this.__importStar) || function (mod) {$/;"	c
Star	api/build/src/errors/index.js	/^var __exportStar = (this && this.__exportStar) || function(m, exports) {$/;"	c
TASK	api/build/src/constants/issues.d.ts	/^    TASK = "task",$/;"	e	enum:IssueType
TASK	api/src/constants/issues.ts	/^  TASK = 'task',$/;"	e	enum:IssueType
Token	api/build/src/utils/authToken.js	/^const signToken = (payload, options) => jsonwebtoken_1.default.sign(payload, process.env.JWT_SEC/;"	c
Token	api/build/src/utils/authToken.js	/^const verifyToken = (token) => {$/;"	c
Token_1	api/build/src/middleware/authentication.js	/^const authToken_1 = require("utils\/authToken");$/;"	c
User	api/build/src/database/seeds/development/user.js	/^const generateUser = (data = {}) => ({$/;"	c
User	api/build/src/entities/User.d.ts	/^declare class User extends BaseEntity {$/;"	c
User	api/build/src/entities/User.js	/^User = __decorate([$/;"	c
User	api/build/src/entities/User.js	/^let User = class User extends typeorm_1.BaseEntity {$/;"	c
User	api/build/src/middleware/authentication.js	/^    req.currentUser = await (0, typeorm_1.findEntityOrThrow)(entities_1.User, userId);$/;"	c
User	api/build/src/middleware/authentication.js	/^exports.authenticateUser = (0, errors_1.catchErrors)(async (req, _res, next) => {$/;"	c
User	api/src/entities/User.ts	/^class User extends BaseEntity {$/;"	c
User	api/src/utils/typeorm.ts	/^  User,$/;"	C
User_1	api/build/src/entities/index.js	/^var User_1 = require(".\/User");$/;"	c
Validator	api/build/src/utils/validation.d.ts	/^declare type Validator = (value: Value, fieldValues?: FieldValues) => ErrorMessage;$/;"	a
Validator	api/src/utils/validation.ts	/^type Validator = (value: Value, fieldValues?: FieldValues) => ErrorMessage;$/;"	a
Value	api/build/src/utils/validation.d.ts	/^declare type Value = any;$/;"	a
Value	api/src/utils/validation.ts	/^type Value = any;$/;"	a
_moduleDirectories	api/package.json	/^  "_moduleDirectories": [$/;"	a
allowSyntheticDefaultImports	api/tsconfig.json	/^    "allowSyntheticDefaultImports": true,$/;"	b	object:compilerOptions
alwaysStrict	api/tsconfig.json	/^    "alwaysStrict": true,$/;"	b	object:compilerOptions
authenticateUser	api/build/src/middleware/authentication.d.ts	/^export declare const authenticateUser: import("express").RequestHandler<import("express-serve-st/;"	C
authenticateUser	api/src/middleware/authentication.ts	/^export const authenticateUser = catchErrors(async (req, _res, next) => {$/;"	C
author	api/package.json	/^  "author": "Shihab Dider <shihabdider@gmail.com>",$/;"	s
baseUrl	api/tsconfig.json	/^    "baseUrl": ".\/src",$/;"	s	object:compilerOptions
body	api/build/src/entities/Comment.d.ts	/^    body: string;$/;"	p	class:Comment
body	api/src/entities/Comment.ts	/^  body: string;$/;"	p	class:Comment
catch	api/build/src/errors/asyncCatch.js	/^        catch (error) {$/;"	f
catch	api/build/src/index.js	/^    catch (error) {$/;"	f
catch	api/build/src/utils/authToken.js	/^    catch (error) {$/;"	f
catchErrors	api/build/src/errors/asyncCatch.d.ts	/^export declare const catchErrors: (requestHandler: RequestHandler) => RequestHandler;$/;"	C
catchErrors	api/src/errors/asyncCatch.ts	/^export const catchErrors = (requestHandler: RequestHandler): RequestHandler => {$/;"	C
category	api/build/src/entities/Project.d.ts	/^    category: ProjectCategory;$/;"	p	class:Project
category	api/src/entities/Project.ts	/^  category: ProjectCategory;$/;"	p	class:Project
clean	api/package.json	/^    "clean": "gts clean",$/;"	s	object:scripts
code	api/build/src/errors/customErrors.d.ts	/^    code: string | number;$/;"	p	class:CustomError
code	api/src/errors/customErrors.ts	/^    public code: string | number = 'INTERNAL_ERROR',$/;"	p	class:CustomError
comments	api/build/src/entities/Issue.d.ts	/^    comments: Comment[];$/;"	p	class:Issue
comments	api/build/src/entities/User.d.ts	/^    comments: Comment[];$/;"	p	class:User
comments	api/src/entities/Issue.ts	/^  comments: Comment[];$/;"	p	class:Issue
comments	api/src/entities/User.ts	/^  comments: Comment[];$/;"	p	class:User
compile	api/package.json	/^    "compile": "tsc",$/;"	s	object:scripts
compilerOptions	api/tsconfig.json	/^  "compilerOptions": {$/;"	o
constructor	api/build/src/errors/customErrors.d.ts	/^    constructor(message: string, code?: string | number, status?: number, data?: ErrorData);$/;"	m	class:CustomError
constructor	api/build/src/errors/customErrors.js	/^    constructor(entityName) {$/;"	f
constructor	api/build/src/errors/customErrors.js	/^    constructor(errorData) {$/;"	f
constructor	api/build/src/errors/customErrors.js	/^    constructor(message = 'Authentication token is invalid.') {$/;"	f
constructor	api/build/src/errors/customErrors.js	/^    constructor(message, code = 'INTERNAL_ERROR', status = 500, data = {}) {$/;"	f
constructor	api/build/src/errors/customErrors.js	/^    constructor(originalUrl) {$/;"	f
constructor	api/src/errors/customErrors.ts	/^  constructor($/;"	m	class:CustomError
constructor	api/src/errors/customErrors.ts	/^  constructor(entityName: string) {$/;"	m	class:EntityNotFoundError
constructor	api/src/errors/customErrors.ts	/^  constructor(errorData: ErrorData) {$/;"	m	class:BadUserInputError
constructor	api/src/errors/customErrors.ts	/^  constructor(message = 'Authentication token is invalid.') {$/;"	m	class:InvalidTokenError
constructor	api/src/errors/customErrors.ts	/^  constructor(originalUrl: string) {$/;"	m	class:RouteNotFoundError
cors	api/package.json	/^    "cors": "^2.8.5",$/;"	s	object:dependencies
createDatabaseConnection	api/build/src/database/connection.d.ts	/^declare const createDatabaseConnection: () => Promise<Connection>;$/;"	C
createDatabaseConnection	api/src/database/connection.ts	/^const createDatabaseConnection = (): Promise<Connection> =>$/;"	C
createEntity	api/build/src/utils/typeorm.d.ts	/^export declare const createEntity: <T extends EntityConstructor>(Constructor: T, input: Partial</;"	C
createEntity	api/src/utils/typeorm.ts	/^export const createEntity = async <T extends EntityConstructor>($/;"	C
createdAt	api/build/src/entities/Comment.d.ts	/^    createdAt: Date;$/;"	p	class:Comment
createdAt	api/build/src/entities/Issue.d.ts	/^    createdAt: Date;$/;"	p	class:Issue
createdAt	api/build/src/entities/Project.d.ts	/^    createdAt: Date;$/;"	p	class:Project
createdAt	api/build/src/entities/User.d.ts	/^    createdAt: Date;$/;"	p	class:User
createdAt	api/src/entities/Comment.ts	/^  createdAt: Date;$/;"	p	class:Comment
createdAt	api/src/entities/Issue.ts	/^  createdAt: Date;$/;"	p	class:Issue
createdAt	api/src/entities/Project.ts	/^  createdAt: Date;$/;"	p	class:Project
createdAt	api/src/entities/User.ts	/^  createdAt: Date;$/;"	p	class:User
currentUser	api/src/types/express.d.ts	/^    currentUser: import('entities').User;$/;"	p	interface:Express.Request
data	api/build/src/errors/customErrors.d.ts	/^    data: ErrorData;$/;"	p	class:CustomError
db-seed	api/package.json	/^    "db-seed": "nodemon --exec ts-node --files src\/database\/seeds\/development\/index.ts",$/;"	s	object:scripts
defineProperty	api/build/src/entities/index.js	/^Object.defineProperty(exports, "Comment", { enumerable: true, get: function () { return __import/;"	f
defineProperty	api/build/src/entities/index.js	/^Object.defineProperty(exports, "Issue", { enumerable: true, get: function () { return __importDe/;"	f
defineProperty	api/build/src/entities/index.js	/^Object.defineProperty(exports, "Project", { enumerable: true, get: function () { return __import/;"	f
defineProperty	api/build/src/entities/index.js	/^Object.defineProperty(exports, "User", { enumerable: true, get: function () { return __importDef/;"	f
defineProperty	api/build/src/errors/index.js	/^Object.defineProperty(exports, "catchErrors", { enumerable: true, get: function () { return asyn/;"	f
deleteEntity	api/build/src/utils/typeorm.d.ts	/^export declare const deleteEntity: <T extends EntityConstructor>(Constructor: T, id: number | st/;"	C
deleteEntity	api/src/utils/typeorm.ts	/^export const deleteEntity = async <T extends EntityConstructor>($/;"	C
dependencies	api/package.json	/^  "dependencies": {$/;"	o
description	api/build/src/entities/Issue.d.ts	/^    description: string | null;$/;"	p	class:Issue
description	api/build/src/entities/Project.d.ts	/^    description: string | null;$/;"	p	class:Project
description	api/package.json	/^  "description": "issue tracker built using react and postgreSQL",$/;"	s
description	api/src/entities/Issue.ts	/^  description: string | null;$/;"	p	class:Issue
description	api/src/entities/Project.ts	/^  description: string | null;$/;"	p	class:Project
devDependencies	api/package.json	/^  "devDependencies": {$/;"	o
dotenv	api/package.json	/^    "dotenv": "^16.0.3",$/;"	s	object:dependencies
email	api/build/src/entities/User.d.ts	/^    email: string;$/;"	p	class:User
email	api/src/entities/User.ts	/^  email: string;$/;"	p	class:User
emitDecoratorMetadata	api/tsconfig.json	/^    "emitDecoratorMetadata": true,$/;"	b	object:compilerOptions
entities	api/src/utils/typeorm.ts	/^const entities: {[key: string]: EntityConstructor} = {$/;"	C
errorFields	api/src/utils/typeorm.ts	/^    const errorFields = generateErrors(instance, Constructor.validations);$/;"	C
errorHandler	api/build/src/errors/errorHandler.d.ts	/^export declare const errorHandler: ErrorRequestHandler;$/;"	C
errorHandler	api/src/errors/errorHandler.ts	/^export const errorHandler: ErrorRequestHandler = (error, _req, res, _next) => {$/;"	C
esModuleInterop	api/tsconfig.json	/^    "esModuleInterop": true,$/;"	b	object:compilerOptions
eslint	api/package.json	/^    "eslint": "^8.26.0",$/;"	s	object:devDependencies
eslint-config-airbnb-base	api/package.json	/^    "eslint-config-airbnb-base": "^15.0.0",$/;"	s	object:devDependencies
eslint-config-prettier	api/package.json	/^    "eslint-config-prettier": "^8.5.0",$/;"	s	object:devDependencies
eslint-plugin-import	api/package.json	/^    "eslint-plugin-import": "^2.26.0",$/;"	s	object:devDependencies
eslint-plugin-prettier	api/package.json	/^    "eslint-plugin-prettier": "^4.2.1",$/;"	s	object:devDependencies
establishDatabaseConnection	api/src/index.ts	/^const establishDatabaseConnection = async (): Promise<void> => {$/;"	C
estimate	api/build/src/entities/Issue.d.ts	/^    estimate: number | null;$/;"	p	class:Issue
estimate	api/src/entities/Issue.ts	/^  estimate: number | null;$/;"	p	class:Issue
exclude	api/tsconfig.json	/^  "exclude": ["node_modules"],$/;"	a
experimentalDecorators	api/tsconfig.json	/^    "experimentalDecorators": true,$/;"	b	object:compilerOptions
export	api/build/src/errors/customErrors.d.ts	/^export {};$/;"	p	class:CustomError
exports	api/.prettierrc.js	/^module.exports = {$/;"	o
express	api/package.json	/^    "express": "^4.18.2",$/;"	s	object:dependencies
express-async-handler	api/package.json	/^    "express-async-handler": "^1.2.0",$/;"	s	object:dependencies
extends	api/.eslintrc.json	/^  "extends": ".\/node_modules\/gts\/"$/;"	s
extends	api/tsconfig.json	/^  "extends": ".\/node_modules\/gts\/tsconfig-google.json",$/;"	s
faker	api/package.json	/^    "faker": "5.5.3",$/;"	s	object:dependencies
findEntityOrThrow	api/build/src/utils/typeorm.d.ts	/^export declare const findEntityOrThrow: <T extends EntityConstructor>(Constructor: T, options: F/;"	C
findEntityOrThrow	api/src/utils/typeorm.ts	/^export const findEntityOrThrow = async <T extends EntityConstructor>($/;"	C
fix	api/package.json	/^    "fix": "gts fix",$/;"	s	object:scripts
forceConsistentCasingInFileNames	api/tsconfig.json	/^    "forceConsistentCasingInFileNames": true$/;"	b	object:compilerOptions
function	api/build/src/constants/issues.js	/^(function (IssuePriority) {$/;"	f
function	api/build/src/constants/issues.js	/^(function (IssueStatus) {$/;"	f
function	api/build/src/constants/issues.js	/^(function (IssueType) {$/;"	f
function	api/build/src/constants/projects.js	/^(function (ProjectCategory) {$/;"	f
function	api/build/src/controllers/issues.js	/^var __importDefault = (this && this.__importDefault) || function (mod) {$/;"	f
function	api/build/src/controllers/projects.js	/^var __importDefault = (this && this.__importDefault) || function (mod) {$/;"	f
function	api/build/src/database/connection.js	/^      desc = { enumerable: true, get: function() { return m[k]; } };$/;"	f
function	api/build/src/database/connection.js	/^var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) /;"	f
function	api/build/src/database/connection.js	/^var __importStar = (this && this.__importStar) || function (mod) {$/;"	f
function	api/build/src/database/connection.js	/^var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {$/;"	f
function	api/build/src/database/connection.js	/^}) : (function(o, m, k, k2) {$/;"	f
function	api/build/src/database/connection.js	/^}) : function(o, v) {$/;"	f
function	api/build/src/database/seeds/development/user.js	/^var __importDefault = (this && this.__importDefault) || function (mod) {$/;"	f
function	api/build/src/entities/Comment.js	/^var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {$/;"	f
function	api/build/src/entities/Comment.js	/^var __importDefault = (this && this.__importDefault) || function (mod) {$/;"	f
function	api/build/src/entities/Comment.js	/^var __metadata = (this && this.__metadata) || function (k, v) {$/;"	f
function	api/build/src/entities/Issue.js	/^var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {$/;"	f
function	api/build/src/entities/Issue.js	/^var __importDefault = (this && this.__importDefault) || function (mod) {$/;"	f
function	api/build/src/entities/Issue.js	/^var __metadata = (this && this.__metadata) || function (k, v) {$/;"	f
function	api/build/src/entities/Project.js	/^var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {$/;"	f
function	api/build/src/entities/Project.js	/^var __importDefault = (this && this.__importDefault) || function (mod) {$/;"	f
function	api/build/src/entities/Project.js	/^var __metadata = (this && this.__metadata) || function (k, v) {$/;"	f
function	api/build/src/entities/User.js	/^var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {$/;"	f
function	api/build/src/entities/User.js	/^var __importDefault = (this && this.__importDefault) || function (mod) {$/;"	f
function	api/build/src/entities/User.js	/^var __metadata = (this && this.__metadata) || function (k, v) {$/;"	f
function	api/build/src/entities/index.js	/^var __importDefault = (this && this.__importDefault) || function (mod) {$/;"	f
function	api/build/src/errors/index.js	/^      desc = { enumerable: true, get: function() { return m[k]; } };$/;"	f
function	api/build/src/errors/index.js	/^var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) /;"	f
function	api/build/src/errors/index.js	/^var __exportStar = (this && this.__exportStar) || function(m, exports) {$/;"	f
function	api/build/src/errors/index.js	/^}) : (function(o, m, k, k2) {$/;"	f
function	api/build/src/index.js	/^var __importDefault = (this && this.__importDefault) || function (mod) {$/;"	f
function	api/build/src/utils/authToken.js	/^var __importDefault = (this && this.__importDefault) || function (mod) {$/;"	f
generateComment	api/src/database/seeds/development/comment.ts	/^const generateComment = (data: Partial<Comment> = {}): Partial<Comment> => ({$/;"	C
generateErrors	api/build/src/utils/validation.d.ts	/^export declare const generateErrors: (fieldValues: FieldValues, fieldValidators: FieldValidators/;"	C
generateErrors	api/src/utils/validation.ts	/^export const generateErrors = ($/;"	C
generateIssue	api/src/database/seeds/development/issue.ts	/^const generateIssue = (data: Partial<Issue> = {}): Partial<Issue> => ({$/;"	C
generateProject	api/src/database/seeds/development/project.ts	/^const generateProject = (data: Partial<Project> = {}): Partial<Project> => ({$/;"	C
generateUser	api/build/src/database/seeds/development/user.d.ts	/^declare const generateUser: (data?: Partial<User>) => Partial<User>;$/;"	C
generateUser	api/src/database/seeds/development/user.ts	/^const generateUser = (data: Partial<User> = {}): Partial<User> => ({$/;"	C
get	api/build/src/database/connection.js	/^      desc = { enumerable: true, get: function() { return m[k]; } };$/;"	m
get	api/build/src/entities/index.js	/^Object.defineProperty(exports, "Comment", { enumerable: true, get: function () { return __import/;"	m
get	api/build/src/entities/index.js	/^Object.defineProperty(exports, "Issue", { enumerable: true, get: function () { return __importDe/;"	m
get	api/build/src/entities/index.js	/^Object.defineProperty(exports, "Project", { enumerable: true, get: function () { return __import/;"	m
get	api/build/src/entities/index.js	/^Object.defineProperty(exports, "User", { enumerable: true, get: function () { return __importDef/;"	m
get	api/build/src/errors/index.js	/^      desc = { enumerable: true, get: function() { return m[k]; } };$/;"	m
get	api/build/src/errors/index.js	/^Object.defineProperty(exports, "catchErrors", { enumerable: true, get: function () { return asyn/;"	m
getAuthTokenFromRequest	api/src/middleware/authentication.ts	/^const getAuthTokenFromRequest = (req: Request): string | null => {$/;"	C
gts	api/package.json	/^    "gts": "^3.1.1",$/;"	s	object:devDependencies
hooks	api/package.json	/^    "hooks": {$/;"	o	object:husky
husky	api/package.json	/^    "husky": "^8.0.1",$/;"	s	object:devDependencies
husky	api/package.json	/^  "husky": {$/;"	o
id	api/build/src/entities/Comment.d.ts	/^    id: number;$/;"	p	class:Comment
id	api/build/src/entities/Issue.d.ts	/^    id: number;$/;"	p	class:Issue
id	api/build/src/entities/Project.d.ts	/^    id: number;$/;"	p	class:Project
id	api/build/src/entities/User.d.ts	/^    id: number;$/;"	p	class:User
id	api/src/entities/Comment.ts	/^  id: number;$/;"	p	class:Comment
id	api/src/entities/Issue.ts	/^  id: number;$/;"	p	class:Issue
id	api/src/entities/Project.ts	/^  id: number;$/;"	p	class:Project
id	api/src/entities/User.ts	/^  id: number;$/;"	p	class:User
if	api/build/src/middleware/authentication.js	/^    if (!token) {$/;"	f
if	api/build/src/middleware/authentication.js	/^    if (!userId) {$/;"	f
if	api/build/src/utils/typeorm.js	/^    if (!instance) {$/;"	f
if	api/build/src/utils/typeorm.js	/^    if ('validations' in Constructor) {$/;"	f
if	api/build/src/utils/validation.js	/^            if (errorMessage !== false && !fieldValues[fieldName]) {$/;"	f
include	api/tsconfig.json	/^  "include": [$/;"	a
initializeApp	api/src/index.ts	/^const initializeApp = async (): Promise<void> => {$/;"	C
initializeExpress	api/src/index.ts	/^const initializeExpress = (): void => {$/;"	C
initializeSeed	api/src/database/seeds/development/index.ts	/^const initializeSeed = async (): Promise<void> => {$/;"	C
instance	api/src/utils/typeorm.ts	/^  const Constructor = entities[instance.constructor.name];$/;"	C
instance	api/src/utils/typeorm.ts	/^  const instance = Constructor.create(input);$/;"	C
instance	api/src/utils/typeorm.ts	/^  const instance = await Constructor.findOne(options);$/;"	C
instance	api/src/utils/typeorm.ts	/^  const instance = await findEntityOrThrow(Constructor, {where: {id: id}});$/;"	C
is	api/build/src/utils/validation.d.ts	/^declare const is: {$/;"	C
is	api/src/utils/validation.ts	/^const is = {$/;"	C
issue	api/build/src/entities/Comment.d.ts	/^    issue: Issue;$/;"	p	class:Comment
issue	api/src/controllers/issues.ts	/^    const issue = await createEntity(Issue, req.body);$/;"	C
issue	api/src/controllers/issues.ts	/^    const issue = await findEntityOrThrow(Issue, {$/;"	C
issue	api/src/controllers/issues.ts	/^    const issue = deleteEntity(Issue, req.params.issueId);$/;"	C
issue	api/src/controllers/issues.ts	/^    const issue = updateEntity(Issue, req.params.issueId, req.body);$/;"	C
issue	api/src/entities/Comment.ts	/^  issue: Issue;$/;"	p	class:Comment
issues	api/build/src/entities/Project.d.ts	/^    issues: Issue[];$/;"	p	class:Project
issues	api/build/src/entities/User.d.ts	/^    issues: Issue[];$/;"	p	class:User
issues	api/src/controllers/issues.ts	/^    const issues = await Issue.find();$/;"	C
issues	api/src/database/seeds/development/index.ts	/^  const issues = await seedIssues(projects);$/;"	C
issues	api/src/database/seeds/guestUser.ts	/^  const issues = await seedIssues(project);$/;"	C
issues	api/src/entities/Project.ts	/^  issues: Issue[];$/;"	p	class:Project
issues	api/src/entities/User.ts	/^  issues: Issue[];$/;"	p	class:User
jsonwebtoken	api/package.json	/^    "jsonwebtoken": "^8.5.1",$/;"	s	object:dependencies
lib	api/tsconfig.json	/^      "lib": ["es2019"],$/;"	a	object:compilerOptions
license	api/package.json	/^  "license": "MIT",$/;"	s
lint	api/package.json	/^    "lint": "gts lint",$/;"	s	object:scripts
lint-staged	api/package.json	/^    "lint-staged": "^13.0.3",$/;"	s	object:devDependencies
lint-staged	api/package.json	/^  "lint-staged": {$/;"	o
lodash	api/package.json	/^    "lodash": "^4.17.21",$/;"	s	object:dependencies
main	api/package.json	/^  "main": "src\/index.ts",$/;"	s
message	api/build/src/errors/customErrors.d.ts	/^    message: string;$/;"	p	class:CustomError
message	api/src/errors/customErrors.ts	/^    public message: string,$/;"	p	class:CustomError
mod	api/build/src/controllers/issues.js	/^    return (mod && mod.__esModule) ? mod : { "default": mod };$/;"	o
mod	api/build/src/controllers/projects.js	/^    return (mod && mod.__esModule) ? mod : { "default": mod };$/;"	o
mod	api/build/src/database/seeds/development/user.js	/^    return (mod && mod.__esModule) ? mod : { "default": mod };$/;"	o
mod	api/build/src/entities/Comment.js	/^    return (mod && mod.__esModule) ? mod : { "default": mod };$/;"	o
mod	api/build/src/entities/Issue.js	/^    return (mod && mod.__esModule) ? mod : { "default": mod };$/;"	o
mod	api/build/src/entities/Project.js	/^    return (mod && mod.__esModule) ? mod : { "default": mod };$/;"	o
mod	api/build/src/entities/User.js	/^    return (mod && mod.__esModule) ? mod : { "default": mod };$/;"	o
mod	api/build/src/entities/index.js	/^    return (mod && mod.__esModule) ? mod : { "default": mod };$/;"	o
mod	api/build/src/index.js	/^    return (mod && mod.__esModule) ? mod : { "default": mod };$/;"	o
mod	api/build/src/utils/authToken.js	/^    return (mod && mod.__esModule) ? mod : { "default": mod };$/;"	o
module-alias	api/package.json	/^    "module-alias": "^2.2.2",$/;"	s	object:dependencies
moduleResolution	api/tsconfig.json	/^    "moduleResolution": "node",$/;"	s	object:compilerOptions
name	api/build/src/entities/Project.d.ts	/^    name: string;$/;"	p	class:Project
name	api/build/src/entities/User.d.ts	/^    name: string;$/;"	p	class:User
name	api/package.json	/^  "name": "react-issue-tracker",$/;"	s
name	api/src/entities/Project.ts	/^  name: string;$/;"	p	class:Project
name	api/src/entities/User.ts	/^  name: string;$/;"	p	class:User
noImplicitAny	api/tsconfig.json	/^    "noImplicitAny": true,$/;"	b	object:compilerOptions
noImplicitThis	api/tsconfig.json	/^    "noImplicitThis": true,$/;"	b	object:compilerOptions
noUnusedLocals	api/tsconfig.json	/^    "noUnusedLocals": true,$/;"	b	object:compilerOptions
noUnusedParameters	api/tsconfig.json	/^    "noUnusedParameters": true,$/;"	b	object:compilerOptions
nodemon	api/package.json	/^    "nodemon": "^2.0.20",$/;"	s	object:devDependencies
outDir	api/tsconfig.json	/^    "outDir": "build",$/;"	s	object:compilerOptions
pg	api/package.json	/^    "pg": "^8.8.0",$/;"	s	object:dependencies
posttest	api/package.json	/^    "posttest": "yarn run lint"$/;"	s	object:scripts
pre-commit	api/package.json	/^      "pre-commit": "lint-staged"$/;"	s	object:husky.hooks
prepare	api/package.json	/^    "prepare": "yarn run compile",$/;"	s	object:scripts
pretest	api/package.json	/^    "pretest": "yarn run compile",$/;"	s	object:scripts
prettier	api/package.json	/^    "prettier": "^2.7.1",$/;"	s	object:devDependencies
priority	api/build/src/entities/Issue.d.ts	/^    priority: IssuePriority;$/;"	p	class:Issue
priority	api/src/entities/Issue.ts	/^  priority: IssuePriority;$/;"	p	class:Issue
private	api/package.json	/^  "private": false,$/;"	b
project	api/build/src/entities/Issue.d.ts	/^    project: Project;$/;"	p	class:Issue
project	api/src/controllers/projects.ts	/^    const project = await createEntity(Project, req.body);$/;"	C
project	api/src/controllers/projects.ts	/^    const project = await findEntityOrThrow(Project, {$/;"	C
project	api/src/controllers/projects.ts	/^    const project = deleteEntity(Project, req.params.projectId);$/;"	C
project	api/src/controllers/projects.ts	/^    const project = updateEntity(Project, req.params.projectId, req.body);$/;"	C
project	api/src/database/seeds/guestUser.ts	/^  const project = await seedProject(user);$/;"	C
project	api/src/entities/Issue.ts	/^  project: Project;$/;"	p	class:Issue
projects	api/build/src/entities/User.d.ts	/^    projects: Project[];$/;"	p	class:User
projects	api/src/controllers/projects.ts	/^    const projects = await Project.find();$/;"	C
projects	api/src/database/seeds/development/index.ts	/^  const projects = await seedProjects(users);$/;"	C
projects	api/src/entities/User.ts	/^  projects: Project[];$/;"	p	class:User
react-isssue-tracker	api/README.md	/^# react-isssue-tracker$/;"	c
removeComments	api/tsconfig.json	/^    "removeComments": true,$/;"	b	object:compilerOptions
reporterId	api/build/src/entities/Issue.d.ts	/^    reporterId: number;$/;"	p	class:Issue
reporterId	api/src/entities/Issue.ts	/^  reporterId: number;$/;"	p	class:Issue
repository	api/package.json	/^  "repository": "https:\/\/github.com\/shihabdider\/react-issue-tracker.git",$/;"	s
respond	api/src/types/express.d.ts	/^    respond: (data: any) => void;$/;"	p	interface:Express.Response
rootDir	api/tsconfig.json	/^    "rootDir": ".",$/;"	s	object:compilerOptions
router	api/build/src/controllers/issues.d.ts	/^declare const router: import("express-serve-static-core").Router;$/;"	C
router	api/build/src/controllers/projects.d.ts	/^declare const router: import("express-serve-static-core").Router;$/;"	C
router	api/src/controllers/authentication.ts	/^const router = express.Router();$/;"	C
router	api/src/controllers/issues.ts	/^const router = express.Router();$/;"	C
router	api/src/controllers/projects.ts	/^const router = express.Router();$/;"	C
scripts	api/package.json	/^  "scripts": {$/;"	o
seedComments	api/src/database/seeds/development/index.ts	/^const seedComments = (issues: Issue[]): Promise<Comment[]> => {$/;"	C
seedComments	api/src/database/seeds/guestUser.ts	/^const seedComments = (issue: Issue, user: User): Promise<Comment> =>$/;"	C
seedEntities	api/src/database/seeds/development/index.ts	/^const seedEntities = async (): Promise<void> => {$/;"	C
seedGuestUserEntities	api/build/src/database/seeds/guestUser.d.ts	/^declare const seedGuestUserEntities: (user: User) => Promise<void>;$/;"	C
seedGuestUserEntities	api/src/database/seeds/guestUser.ts	/^const seedGuestUserEntities = async (user: User): Promise<void> => {$/;"	C
seedIssues	api/src/database/seeds/development/index.ts	/^const seedIssues = (projects: Project[]): Promise<Issue[]> => {$/;"	C
seedIssues	api/src/database/seeds/guestUser.ts	/^const seedIssues = (project: Project): Promise<Issue[]> => {$/;"	C
seedProject	api/src/database/seeds/guestUser.ts	/^const seedProject = (user: User): Promise<Project> =>$/;"	C
seedProjects	api/src/database/seeds/development/index.ts	/^const seedProjects = (users: User[]): Promise<Project[]> => {$/;"	C
seedUsers	api/src/database/seeds/development/index.ts	/^const seedUsers = (): Promise<User[]> => {$/;"	C
signToken	api/build/src/utils/authToken.d.ts	/^export declare const signToken: (payload: object, options?: SignOptions) => string;$/;"	C
signToken	api/src/utils/authToken.ts	/^export const signToken = (payload: object, options?: SignOptions): string =>$/;"	C
start	api/package.json	/^    "start": "nodemon --exec ts-node --files src\/index.ts",$/;"	s	object:scripts
status	api/build/src/entities/Issue.d.ts	/^    status: IssueStatus;$/;"	p	class:Issue
status	api/build/src/errors/customErrors.d.ts	/^    status: number;$/;"	p	class:CustomError
status	api/src/entities/Issue.ts	/^  status: IssueStatus;$/;"	p	class:Issue
strictBindCallApply	api/tsconfig.json	/^    "strictBindCallApply": true,$/;"	b	object:compilerOptions
strictFunctionTypes	api/tsconfig.json	/^    "strictFunctionTypes": true,$/;"	b	object:compilerOptions
strictNullChecks	api/tsconfig.json	/^    "strictNullChecks": true,$/;"	b	object:compilerOptions
strictPropertyInitialization	api/tsconfig.json	/^    "strictPropertyInitialization": false,$/;"	b	object:compilerOptions
timeRemaining	api/src/entities/Issue.ts	/^  timeRemaining: number | null;$/;"	p	class:Issue
timeSpent	api/src/entities/Issue.ts	/^  timeSpent: number | null;$/;"	p	class:Issue
title	api/build/src/entities/Issue.d.ts	/^    title: string;$/;"	p	class:Issue
title	api/src/entities/Issue.ts	/^  title: string;$/;"	p	class:Issue
ts-node	api/package.json	/^    "ts-node": "^10.9.1",$/;"	s	object:devDependencies
type	api/build/src/entities/Issue.d.ts	/^    type: IssueType;$/;"	p	class:Issue
type	api/src/entities/Issue.ts	/^  type: IssueType;$/;"	p	class:Issue
typeorm	api/package.json	/^    "typeorm": "^0.3.10"$/;"	s	object:dependencies
typescript	api/package.json	/^    "typescript": "~4.7.0"$/;"	s	object:devDependencies
updateEntity	api/build/src/utils/typeorm.d.ts	/^export declare const updateEntity: <T extends EntityConstructor>(Constructor: T, id: number | st/;"	C
updateEntity	api/src/utils/typeorm.ts	/^export const updateEntity = async <T extends EntityConstructor>($/;"	C
updatedAt	api/build/src/entities/Comment.d.ts	/^    updatedAt: Date;$/;"	p	class:Comment
updatedAt	api/build/src/entities/Issue.d.ts	/^    updatedAt: Date;$/;"	p	class:Issue
updatedAt	api/build/src/entities/Project.d.ts	/^    updatedAt: Date;$/;"	p	class:Project
updatedAt	api/build/src/entities/User.d.ts	/^    updatedAt: Date;$/;"	p	class:User
updatedAt	api/src/entities/Comment.ts	/^  updatedAt: Date;$/;"	p	class:Comment
updatedAt	api/src/entities/Issue.ts	/^  updatedAt: Date;$/;"	p	class:Issue
updatedAt	api/src/entities/Project.ts	/^  updatedAt: Date;$/;"	p	class:Project
updatedAt	api/src/entities/User.ts	/^  updatedAt: Date;$/;"	p	class:User
url	api/build/src/entities/Project.d.ts	/^    url: string | null;$/;"	p	class:Project
url	api/src/entities/Project.ts	/^  url: string | null;$/;"	p	class:Project
user	api/build/src/entities/Comment.d.ts	/^    user: User;$/;"	p	class:Comment
user	api/src/controllers/authentication.ts	/^    const user = await createEntity(User, req.body);$/;"	C
user	api/src/entities/Comment.ts	/^  user: User;$/;"	p	class:Comment
userId	api/build/src/entities/Comment.d.ts	/^    userId: number;$/;"	p	class:Comment
userId	api/src/entities/Comment.ts	/^  userId: number;$/;"	p	class:Comment
userId	api/src/middleware/authentication.ts	/^  const userId = verifyToken(token).sub;$/;"	C
userIds	api/build/src/entities/Issue.d.ts	/^    userIds: number[];$/;"	p	class:Issue
userIds	api/src/entities/Issue.ts	/^  userIds: number[];$/;"	p	class:Issue
users	api/build/src/entities/Issue.d.ts	/^    users: User[];$/;"	p	class:Issue
users	api/build/src/entities/Project.d.ts	/^    users: User[];$/;"	p	class:Project
users	api/src/database/seeds/development/index.ts	/^  const users = await seedUsers();$/;"	C
users	api/src/entities/Issue.ts	/^  users: User[];$/;"	p	class:Issue
users	api/src/entities/Project.ts	/^  users: User[];$/;"	p	class:Project
validateAndSaveEntity	api/src/utils/typeorm.ts	/^const validateAndSaveEntity = async <T extends EntityInstance>($/;"	C
validations	api/build/src/entities/Comment.d.ts	/^    static validations: {$/;"	p	class:Comment
validations	api/build/src/entities/Comment.js	/^Comment.validations = {$/;"	o
validations	api/build/src/entities/Issue.d.ts	/^    static validations: {$/;"	p	class:Issue
validations	api/build/src/entities/Issue.js	/^Issue.validations = {$/;"	o
validations	api/build/src/entities/Project.d.ts	/^    static validations: {$/;"	p	class:Project
validations	api/build/src/entities/Project.js	/^Project.validations = {$/;"	o
validations	api/build/src/entities/User.d.ts	/^    static validations: {$/;"	p	class:User
validations	api/build/src/entities/User.js	/^User.validations = {$/;"	o
validations	api/src/entities/Comment.ts	/^  static validations = {$/;"	p	class:Comment
validations	api/src/entities/Issue.ts	/^  static validations = {$/;"	p	class:Issue
validations	api/src/entities/Project.ts	/^  static validations = {$/;"	p	class:Project
validations	api/src/entities/User.ts	/^  static validations = {$/;"	p	class:User
verifyToken	api/build/src/utils/authToken.d.ts	/^export declare const verifyToken: (token: string) => {$/;"	C
verifyToken	api/src/utils/authToken.ts	/^export const verifyToken = (token: string): {[key: string]: any} => {$/;"	C
version	api/package.json	/^  "version": "1.0.0",$/;"	s
where	api/build/src/controllers/issues.js	/^        where: {$/;"	o
where	api/build/src/controllers/projects.js	/^        where: {$/;"	o
where	api/build/src/utils/typeorm.js	/^    const instance = await (0, exports.findEntityOrThrow)(Constructor, { where: { id: id } });$/;"	o
